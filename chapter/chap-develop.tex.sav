
\chapter{虚拟化技术与资源调度系统}
\section{虚拟化技术}
在计算机科学中，虚拟化（Virtualization）是一个表现逻辑群组或电脑资源的子集的进程，用户可以用比原本的组态更好的方式来存取这些进程。这些资源的新虚拟部份是不受现有资源的架设方式，地域或物理组态所限制。一般所指的虚拟化资源包括计算能力和资料储存。
\subsection{虚拟化技术的分类}
按虚拟化的侧重，虚拟化技术可具体分为以下：
\begin{itemize}
  \item 虚拟机（Virtual machine或VM)，可以像真实机器一样运行程序的计算机的软件实现
  \begin{itemize}
    \item 平台虚拟化，将操作系统和硬件平台资源分割开
    \begin{itemize}
      \item 完全虚拟化，敏感指令在操作系统和硬件之间被捕捉处理，客户操作系统无需修改，所有软件都能在虚拟机中运行，例如IBM CP/CMS，VirtualBox，VMware Workstation
      \item 硬件辅助虚拟化，利用硬件（主要是CPU）辅助处理敏感指令以实现完全虚拟化的功能，客户操作系统无需修改，例如VMware Workstation，Xen，KVM
      \item 部分虚拟化，针对部分应用程序进行虚拟，而不是整个操作系统
      \item 准虚拟化/超虚拟化（paravirtualization），为应用程序提供与底层硬件相似但不相同的软件接口，客户操作系统需要进行修改，例如早期的Xen
      \item 操作系统级虚拟化，使操作系统内核支持多用户空间实体，例如Parallels Virtuozzo Containers，Unix-like系统上的chroot，Solaris上的Zone
    \end{itemize}
    \item 应用程序虚拟化，在操作系统和应用程序间建立虚拟环境
    \begin{itemize}
      \item 便携式应用程序，允许程序在便携式设备中运行而不用在操作系统中安装
      \item 跨平台虚拟化，允许针对特定CPU或者操作系统的软件不做修改就能运行在其他平台上，例如Wine
      \item 虚拟设备，运行于虚拟化平台之上，面向应用的虚拟机映像
      \item 模拟器
    \end{itemize}
  \end{itemize}
  \item 虚拟内存，将不相邻的内存区，甚至硬盘空间虚拟成统一连续的内存地址
  \item 存储虚拟化，将实体存储空间（如硬盘）分隔成不同的逻辑存储空间
  \item 网络虚拟化，将不同网络的硬件和软件资源结合成一个虚拟的整体
  \begin{itemize}
    \item 虚拟专用网络（VPN），在大型网络（通常是Internet）中的不同计算机（节点）通过加密连接而组成的虚拟网络，具有类似局域网的功能
    \item 存储器虚拟化，将网络系统中的随机存储器聚合起来，形成统一的虚拟内存池
  \end{itemize}
  \item 桌面虚拟化，在本地计算机显示和操作远程计算机桌面，在远程计算机执行程序和储存信息
\end{itemize}
\subsection{虚拟化技术的发展}
现在由于虚拟化技术在x86服务器上的迅速普及已经引发了虚拟化技术的热潮，但虚拟化技术最初只是应用在大型主机上。大型机上的虚拟分区技术最早可以追溯到上世纪六、七十年代。早在上世纪60年代，IBM公司就发明了一种操作系统虚拟机技术，允许用户在一台主机上运行多个操作系统，让用户尽可能地充分利用昂贵的大型机资源。

最早使用虚拟化技术的是IBM 7044 计算机。IBM之后，在上世纪60年代还开发了型号为Model 67的System/360主机。Model 67主机通过虚拟机监视器(Virtual Machine Monitor)虚拟所有的硬件接口。1965年IBM公司的“M44/44X”计算机项目，定义了虚拟内存管理机制，用户程序可以运行在虚拟的内存中，对于用户来说，这些虚拟内存就好像一个个“虚拟机”，为多个用户的程序提供了独立的计算环境。

IBM提出的虚拟机技术，使一批新产品涌现了出来，比如：IBM360/40，IBM360/67，以及VM/370，这些机器在当时都具有虚拟机功能，通过一种叫VMM(虚拟机监控器)的技术在物理硬件之上生成了很多可以运行独立操作系统软件的虚拟机实例。

由于虚拟化技术技术在商业应用上的优势，RISC服务器与小型机成为了虚拟化技术第二代受益者。1999年，IBM公司在AS/400上提出了上“逻辑分区(LPAR)”技术和新的高可用性集群解决方案。在POWER管理程序上运行的AS/400 LPAR令单台服务器工作起来如同12个独立的服务器。而在2002年，IBM 还更进一步，其AIX5L v5.2还首次包括了IBM实现的动态逻辑分区(DLPAR)。DLPAR允许在无需重启系统的情况下，将包括处理器、内存和其它组件在内的系统资源分配给独立的分区。这种在不中断运行的情况下进行资源分配的能力不仅令系统管理变得更加轻松，而且因为能够更好地使用资源而帮助降低总拥有成本。

不过，尽管惠普、Sun公司也跟随IBM在自己的RISC服务器上提供了虚拟化技术，但由于真正使用大型机和小型机的用户还是少数，加上各家产品和技术之间并不兼容，虚拟化技术仍旧不太被公众所关注。而现在，虚拟化技术的发展已经惠及到了x86架构。

此前，虚拟化技术在x86架构上进展缓慢的主要原因是x86架构本身不适合进行虚拟化，不过这个障碍已经由英特尔、AMD 修改，x86处理器的指令集得到解决;还有一个原因是x86处理器的性能不足，这一原因也由于x86处理器在性能上的飞速提高得到了解决。由于x86架构的广泛普及，x86架构上的虚拟化技术也得到了比以前更大的关注。

随着x86平台上虚拟化技术的实现，首次向人们展示了虚拟化应用的广阔前景，因为x86平台可以提供便宜的、高性能和高可靠的服务器。更重要的是，一些用户已经开始配置虚拟化的生产环境，他们需要得到新的管理工具，从而随着虚拟化技术的发展而得到更大的收益。

不过，与已经有多年历史的UNIX服务器、大型主机上的虚拟化技术相比，x86服务器上的虚拟化仍旧处于早期阶段――根据英特尔的蓝图，在处理器当中集成硬件辅助虚拟化指令只是IA平台上的第一步，而在第二步则要实现I/O方面的虚拟化，直到最后实现整个IA平台的虚拟化。也就是说，目前的x86平台上，仅仅能够实现在处理器级别的虚拟化，在I/O以及其他方面的虚拟化还需要进一步的发展。不仅如此，x86架构上的虚拟化技术还无法完美实现虚拟分区之间动态迁移，而这些在UNIX平台、大型主机上早已不是问题。

自2006年以来，从处理器层面的AMD和Intel到操作系统层面的微软的加入，从数量众多的第三方软件厂商的涌现到服务器系统厂商的高调，我们看到一个趋于完整的服务器虚拟化的产业生态系统正在逐渐形成。这也使得在过去的一两年时间里，虚拟化开始成为广受关注的热点话题。整体看来，随着计算机新技术的飞速发展，虚拟化的前景和若干年前相比几乎彻底改变了，新的虚拟化平台前景十分乐观。

随着x86架构虚拟化的普及，行之有效的资源调度、分配策略也成了研究的重点，也成为了该领域内比较重要的课题。下一节将重点介绍伴随虚拟化发展而出现的各种资源分配算法。
\section{资源调度系统}
\subsection{资源调度系统的分类}
资源调度系统按照不同的分类标准，可以很多种不同的调度系统。调度系统在具体的应用背景下可能需要特定的调度机制支持，因此有以下几类：

根据调度策略是脱机还是联机实现，调度系统可分为：
\begin{itemize}
  \item 静态调度
  \item 动态调度
\end{itemize}
根据系统分类，可分为：
\begin{itemize}
  \item 单处理器调度
  \item 集中式多处理器调度或者集中式仲裁
  \item 分布式调度
\end{itemize}
按照任务的可否抢占需求，系统可分为：
\begin{itemize}
  \item 支持抢占的调度
  \item 不可抢占的调度
\end{itemize}
按照任务对时延的要求，可分为：
\begin{itemize}
  \item 强实时调度
  \item 弱实时调度
  \item 非实时调度
\end{itemize}

\subsection{典型的虚拟机资源调度系统}
\subsubsection{Xen和VMware}
在工业界，Xen已经渐渐成为一个实际存在的工业标准。Xen是剑桥大学计算机系开发的一个开源虚拟机监视器项目，使用Xen可以使单一物理主机上同时运行多个操作系统，并且具有很好的隔离性。Xen可以对启动后的采用标准虚拟化技术的虚拟机进行资源的动态调度，而且可以给Guest OS分配大于物理CPU个数的VCPU。在Xen中，不但可以映射不同的VCPU 到物理CPU，也可以调整CPU运行队列来更改优先级。Xen的架构如图\ref{xen}，在虚拟层的基础上，Xen的Driver domain相当于资源决策支持系统，它负责在监控器提供数据的基础上分配这些虚拟资源。
\begin{figure}[thb]
 \centering
 \includegraphics[width=0.8\textwidth]{xen}
 \caption{Xen的架构}
 \label{xen}
\end{figure}
另外一个流行的虚拟化产品是VMware Infrastructure，通过其Virtual Center可以提供资源管理功能，将处理器和内存资源分配给运行在服务器上的多个虚拟机，为CPU、内存、磁盘和网络带宽确定最小、最大和按比例共享的资源共享，在虚拟机运行的同时支持修改分配，使应用程序能够动态获得更多资源以适应应用峰值性能的需要，从而形成一个具有内置负载平衡能力的自我管理、优化和有效的虚拟机资源调度管理环境。并且，其中的VMware DRS可以跨资源池不间断地监控利用率，并根据反映业务需求和变化的优先级的预定义规则，在多个虚拟机之间智能分配资源。当某个虚拟机负载增加时，VMware DRS通过改变虚拟机在资源池中所在的物理主机来获得更多的资源，例如将该虚拟机迁移到比较空闲的一台机器上。VMware DRS的动态虚拟机迁移机制主要面对的是环境中主机之间的动态资源分配，而不是单机多CPU多核架构（SMP和NUMA，Non Uniform Memory Access非一致访问分布共享存储技术）中的动态资源分配，也没有提供对高性能计算任务的优化，还有VMware目前只能在自家的vCenter使用。VMware DRS的动态迁移如图
\section{虚拟资源调度系统的关键技术及分析}
\subsection{TEST1}
………………………………………………………………………………

该行是一个占位行，不做任何事情

………………………………………………………………………………
\subsubsection{TEST的概述}
………………………………………………………………………………

该行是一个占位行，不做任何事情

………………………………………………………………………………
\subsubsection{TEST的分析}
………………………………………………………………………………

该行是一个占位行，不做任何事情

………………………………………………………………………………
\subsection{TEST2}
………………………………………………………………………………

该行是一个占位行，不做任何事情

………………………………………………………………………………
\subsubsection{TEST的概述}
………………………………………………………………………………

该行是一个占位行，不做任何事情

………………………………………………………………………………
\subsubsection{TEST的分析}
………………………………………………………………………………

该行是一个占位行，不做任何事情

………………………………………………………………………………
\section{本章小结}






